@page
@model GHS.Pages.ProductOrders.IndexModel
@using System.Linq;

@{
    ViewData["Title"] = "Index";
}

<h2>Order</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductModel[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductModel[0].Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductModel[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductOrderModel[0].Quantity)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.ProductOrderModel) {
        <tr>
            <td>
                @Html.DisplayFor(model => model.ProductModel.ToList().Find(x => x.ProductId == item.ProductID).Name)
            </td>
            <td>
                @Html.DisplayFor(model => model.ProductModel.ToList().Find(x => x.ProductId == item.ProductID).Category)
            </td>
            <td>
                @Html.DisplayFor(model => model.ProductModel.ToList().Find(x => x.ProductId == item.ProductID).Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.OrderProductId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.OrderProductId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.OrderProductId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
